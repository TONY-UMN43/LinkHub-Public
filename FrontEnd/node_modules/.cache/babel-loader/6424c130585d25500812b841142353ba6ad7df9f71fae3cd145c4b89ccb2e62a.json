{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ComponentsLists.jsx\",\n  _s = $RefreshSig$();\nimport AccountRegister from \"./ChildComponents/AccountRegister\";\nimport AccountRegisterAwait from \"./ChildComponents/AccountRegisterAwait\";\nimport AccountVerify from \"./ChildComponents/AccountVerify\";\nimport UserProfileRegistration from \"./ChildComponents/UserProfileRegistration\";\nimport LoginAccount from \"./ChildComponents/LoginAccount\";\nimport UserHome from \"./ChildComponents/UserHome\";\nimport HomeScreen from \"./ChildComponents/HomeScreen\";\nimport UserSearchHome from \"./ChildComponents/HomeScreenPages/UserSearchHome\";\nimport MiniQuizHome from \"./ChildComponents/HomeScreenPages/MiniQuizHome\";\nimport QuizTree from \"./ChildComponents/QuizTree\";\nimport EngineeringPage from \"./ChildComponents/HomeScreenPages/FieldPages/EngineeringPage\";\nimport SearchPage from \"./ChildComponents/SearchPage\";\nimport OtherUserProfile from \"./ChildComponents/OtherUserProfile\";\nimport CompanyProfileRegistration from \"./ChildComponents/CompanyRegistration\";\nimport AllUserCompanies from \"./ChildComponents/AllUserCompanies\";\nimport CompanyProfile from \"./ChildComponents/CompanyProfile\";\nimport AllJobsUserProfile from \"./ChildComponents/AllJobsUserProfile\";\nimport AllRequestsUserProfile from \"./ChildComponents/AllRequestsUserProfile\";\nimport PostNewJob from \"./ChildComponents/PostNewJob\";\nimport JobProfile from \"./ChildComponents/JobProfile\";\nimport JobAppPage from \"./ChildComponents/JobAppPage\";\nimport AllUserConnections from \"./ChildComponents/AllUserConnections\";\nimport MyUserProfile from \"./ChildComponents/MyUserProfile\";\nimport OtherCompanyProfilePage from \"./ChildComponents/OtherCompanyProfilePage\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ComponentsLists = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const fetchUser = async userId => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/users/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchFullUser = async userId => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/full/users/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchPostUser = async userId => {\n    try {\n      const response = await fetch(`http://localhost:8000/users/posts/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const userSearch = async (firstName, lastName) => {\n    try {\n      // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n      const response = await fetch(`http://localhost:8000/home/users?first_name=${firstName}&last_name=${lastName}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchNotAddedSkills = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/home/user/not-added/skills/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchAddedSkills = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/home/user/skills/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchAllSkills = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/all-skills/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchUserConnections = async () => {\n    try {\n      // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/users/connections/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchUserPendingRequests = async () => {\n    try {\n      // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/users/friend-requests/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const jobSearch = async (firstName, lastName) => {\n    try {\n      // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n      const response = await fetch(`http://localhost:8000/home/jobs?first_name=${firstName}&last_name=${lastName}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchJob = async jobId => {\n    try {\n      const response = await fetch(`http://localhost:8000/home/jobs/${jobId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Couldn't fetch job due to this error: \", error);\n      alert(`Error occured while fetching job ${error}`);\n    }\n  };\n  const fetchJobQuestions = async jobId => {\n    try {\n      const response = await fetch(`http://localhost:8000/home/jobs/questions/${jobId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Couldn't fetch job due to this error: \", error);\n      alert(`Error occured while fetching job ${error}`);\n    }\n  };\n  const fetchAllJobs = async () => {\n    // const token = localStorage.getItem(\"authToken\");\n    const response = await fetch(\"http://localhost:8000/home/jobs/all/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const responseData = await response.json();\n    return responseData;\n  };\n  const companySearch = async (firstName, lastName) => {\n    try {\n      // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n      const response = await fetch(`http://localhost:8000/home/companies?first_name=${firstName}&last_name=${lastName}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchCompany = async companyId => {\n    try {\n      const response = await fetch(`http://localhost:8000/home/companies/${companyId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchCompanyJobs = async companyId => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/home/companies/jobs/${companyId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const fetchUserCompany = async companyId => {\n    const token = localStorage.getItem(\"authToken\");\n    const response = await fetch(`http://localhost:8000/home/user-companies/${companyId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    const responseData = await response.json();\n    return responseData;\n  };\n  const fetchUserCompanies = async () => {\n    const token = localStorage.getItem(\"authToken\");\n    const response = await fetch(\"http://localhost:8000/home/user-companies/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    const responseData = await response.json();\n    return responseData;\n  };\n  const fetchAllPosts = async () => {\n    const token = localStorage.getItem(\"authToken\");\n    const response = await fetch(\"http://localhost:8000/all-posts/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    const responseData = await response.json();\n    return responseData;\n  };\n  const createAccount = async userInfo => {\n    try {\n      console.log(\"Payload sent\");\n      const response = await fetch(\"http://localhost:8000/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      });\n      console.log(response);\n      // if (!response.ok){\n      //     alert(\"Username or Email already exist, Please a choose a different one\");\n      //     return;\n      // }\n\n      if (!response.ok) {\n        // const errorData = response.json().catch();\n        // console.log(`Backend Error ${response.status}:`,errorData);\n        // throw new Error(`HTTP Error: ${response.status} - ${JSON.stringify(errorData)}`);\n        return response.text().then(text => {\n          throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n        });\n      }\n      const newAccount = await response.json();\n      setAccounts(oldAccounts => [...oldAccounts, newAccount]);\n      console.log(newAccount);\n      // console.log(response.data)\n      localStorage.setItem(\"currUserId\", newAccount.user_id);\n      localStorage.setItem(\"authToken\", newAccount.access_token);\n      // localStorage.setItem(\"currUserDetails\",newAccount);\n      return newAccount;\n    } catch (error) {\n      console.log(`Couldn't create new Account: ${error}`);\n      alert(`Account couldn't be created ${error}`);\n      return;\n    }\n  };\n  const createProfile = async profileInfo => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:8000/register/user_profile/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(profileInfo)\n      });\n      const responseData = response.json();\n    } catch (error) {\n      console.log(\"Couldn't create profile\", error);\n      alert(`Couldn't create profile ${error}`);\n      return;\n    }\n  };\n  const addUserSkills = async skills => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/home/users/skills/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(skills)\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      console.log(responseData);\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const addUserWorkExperience = async workExperience => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:8000/home/work-experience/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(workExperience)\n      });\n      if (!response.ok) {\n        return;\n      }\n      const responseData = await response.json();\n      console.log(responseData);\n      return responseData;\n    } catch (error) {\n      console.log(\"Error fetching user\", error);\n      alert(`Could not fetch the user ${error}`);\n    }\n  };\n  const createCompanyProfile = async companyInfo => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:8000/home/register/company_profile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(companyInfo)\n      });\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Couldn't create profile\", error);\n      alert(`Couldn't create profile ${error}`);\n      return;\n    }\n  };\n  const createJob = async jobInfo => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:8000/home/createjob/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(jobInfo)\n      });\n      const responseData = response.json();\n      return responseData;\n    } catch (error) {\n      console.log(\"Couldn't create profile\", error);\n      alert(`Couldn't create profile ${error}`);\n      return;\n    }\n  };\n  const createPost = async postData => {\n    const token = localStorage.getItem(\"authToken\");\n    console.log(\"Here's the token: \", token);\n    const response = await fetch(\"http://localhost:8000/home/createpost/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify(postData)\n    });\n    const responseData = await response.json();\n    console.log(\"Here's what the backend response says: \", responseData);\n    return responseData;\n  };\n  const sendConnection = async userId => {\n    const token = localStorage.getItem(\"authToken\");\n    const response = await fetch(`http://localhost:8000/home/connection-request/?user_id=${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": `application/json`,\n        'Authorization': `Bearer ${token}`\n      }\n      // body: JSON.stringify(userId),\n    });\n    const responseData = await response.json();\n    return responseData;\n  };\n  const loginAccount = async accountInfo => {\n    try {\n      const response = await fetch(\"http://localhost:8000/login/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(accountInfo)\n      });\n      if (!response.ok) {\n        console.log(\"Couldn't login account\");\n        alert(\"Can't login\");\n      }\n      const responseData = await response.json();\n      console.log(\"Here's the login response\", responseData);\n      console.log(\"Token login: \", responseData.access_token);\n      localStorage.setItem(\"authToken\", responseData.access_token);\n      localStorage.setItem(\"currUserId\", responseData.user_id);\n      return responseData;\n    } catch (error) {\n      console.log(\"Failed to sign in user\", error);\n      alert(error);\n      return;\n    }\n  };\n  const verifyAccount = async token => {\n    const response = await fetch(`http://localhost:8000/register/verify-email?token=${token}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(token)\n    });\n  };\n  const resendEmailVerify = async userId => {\n    try {\n      const response = await fetch(`http://localhost:8000/register/resend/${userId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n        // body: JSON.stringify(userId),\n      });\n      const responseData = await response.json();\n      console.log(\"Here's the user id \", localStorage.getItem(\"currUserId\"));\n    } catch (error) {\n      console.log(\"Couldn't send verification email\", error);\n      alert(`Email unable to send ${error}`);\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/homepage/search/\",\n          element: /*#__PURE__*/_jsxDEV(UserSearchHome, {\n            userSearch: userSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/homepage/mini-quiz/\",\n          element: /*#__PURE__*/_jsxDEV(MiniQuizHome, {\n            node: QuizTree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/homepage/engineering-info/\",\n          element: /*#__PURE__*/_jsxDEV(EngineeringPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register/\",\n          element: /*#__PURE__*/_jsxDEV(AccountRegister, {\n            createAccount: createAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/login/\",\n          element: /*#__PURE__*/_jsxDEV(LoginAccount, {\n            loginAccount: loginAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register/await\",\n          element: /*#__PURE__*/_jsxDEV(AccountRegisterAwait, {\n            resendEmail: resendEmailVerify,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register/verify-email\",\n          element: /*#__PURE__*/_jsxDEV(AccountVerify, {\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register/profile/\",\n          element: /*#__PURE__*/_jsxDEV(UserProfileRegistration, {\n            createProfile: createProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/\",\n          element: /*#__PURE__*/_jsxDEV(UserHome, {\n            createPost: createPost,\n            fetchPosts: fetchAllPosts,\n            fetchUser: fetchUser,\n            storage: localStorage,\n            fetchJobs: fetchAllJobs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/user-profile/\",\n          element: /*#__PURE__*/_jsxDEV(MyUserProfile, {\n            storage: localStorage,\n            fetchUser: fetchUser,\n            fetchUserSkills: fetchAddedSkills,\n            fetchAllSkills: fetchNotAddedSkills,\n            addUserSkills: addUserSkills,\n            addUserWorkExperience: addUserWorkExperience\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/suggested-jobs\",\n          element: /*#__PURE__*/_jsxDEV(AllJobsUserProfile, {\n            fetchAllJobs: fetchAllJobs,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/connections\",\n          element: /*#__PURE__*/_jsxDEV(AllUserConnections, {\n            fetchAllConnections: fetchUserConnections,\n            storage: localStorage,\n            fetchUser: fetchUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/connections/requests\",\n          element: /*#__PURE__*/_jsxDEV(AllRequestsUserProfile, {\n            fetchAllRequests: fetchUserPendingRequests,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/job/:jobId\",\n          element: /*#__PURE__*/_jsxDEV(JobProfile, {\n            fetchJob: fetchJob,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/job/apply/:jobId\",\n          element: /*#__PURE__*/_jsxDEV(JobAppPage, {\n            fetchQuestions: fetchJobQuestions,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/user-companies\",\n          element: /*#__PURE__*/_jsxDEV(AllUserCompanies, {\n            fetchCompanies: fetchUserCompanies,\n            loadCompany: fetchUserCompany,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/user-companies/:companyId\",\n          element: /*#__PURE__*/_jsxDEV(CompanyProfile, {\n            fetchCompany: fetchUserCompany,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/user-companies/new-job\",\n          element: /*#__PURE__*/_jsxDEV(PostNewJob, {\n            createJob: createJob,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/register/company\",\n          element: /*#__PURE__*/_jsxDEV(CompanyProfileRegistration, {\n            createProfile: createCompanyProfile,\n            storage: localStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/search-results\",\n          element: /*#__PURE__*/_jsxDEV(SearchPage, {\n            fetchUsersByName: userSearch,\n            storage: localStorage,\n            fetchUser: fetchUser,\n            fetchJobsByName: jobSearch,\n            fetchCompaniesByName: companySearch,\n            fetchJob: fetchJob,\n            fetchCompany: fetchCompany\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/user/:userId\",\n          element: /*#__PURE__*/_jsxDEV(OtherUserProfile, {\n            storage: localStorage,\n            getUser: fetchFullUser,\n            sendRequest: sendConnection,\n            getPosts: fetchPostUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signed-in/feed/company/:companyId\",\n          element: /*#__PURE__*/_jsxDEV(OtherCompanyProfilePage, {\n            storage: localStorage,\n            getCompany: fetchCompany,\n            getIndividualJob: fetchJob,\n            getJobs: fetchCompanyJobs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ComponentsLists, \"t8gv+PbceDglu98wX95idKcbPYo=\");\n_c = ComponentsLists;\nexport default ComponentsLists;\nvar _c;\n$RefreshReg$(_c, \"ComponentsLists\");","map":{"version":3,"names":["AccountRegister","AccountRegisterAwait","AccountVerify","UserProfileRegistration","LoginAccount","UserHome","HomeScreen","UserSearchHome","MiniQuizHome","QuizTree","EngineeringPage","SearchPage","OtherUserProfile","CompanyProfileRegistration","AllUserCompanies","CompanyProfile","AllJobsUserProfile","AllRequestsUserProfile","PostNewJob","JobProfile","JobAppPage","AllUserConnections","MyUserProfile","OtherCompanyProfilePage","React","useState","useEffect","BrowserRouter","Routes","Route","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ComponentsLists","_s","accounts","setAccounts","fetchUser","userId","token","localStorage","getItem","response","fetch","method","headers","ok","responseData","json","error","console","log","alert","fetchFullUser","fetchPostUser","userSearch","firstName","lastName","fetchNotAddedSkills","fetchAddedSkills","fetchAllSkills","fetchUserConnections","fetchUserPendingRequests","jobSearch","fetchJob","jobId","fetchJobQuestions","fetchAllJobs","companySearch","fetchCompany","companyId","fetchCompanyJobs","fetchUserCompany","fetchUserCompanies","fetchAllPosts","createAccount","userInfo","body","JSON","stringify","text","then","Error","status","newAccount","oldAccounts","setItem","user_id","access_token","createProfile","profileInfo","addUserSkills","skills","addUserWorkExperience","workExperience","createCompanyProfile","companyInfo","createJob","jobInfo","createPost","postData","sendConnection","loginAccount","accountInfo","verifyAccount","resendEmailVerify","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","node","resendEmail","storage","fetchPosts","fetchJobs","fetchUserSkills","fetchAllConnections","fetchAllRequests","fetchQuestions","fetchCompanies","loadCompany","fetchUsersByName","fetchJobsByName","fetchCompaniesByName","getUser","sendRequest","getPosts","getCompany","getIndividualJob","getJobs","_c","$RefreshReg$"],"sources":["/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ComponentsLists.jsx"],"sourcesContent":["import AccountRegister from \"./ChildComponents/AccountRegister\";\nimport AccountRegisterAwait from \"./ChildComponents/AccountRegisterAwait\";\nimport AccountVerify from \"./ChildComponents/AccountVerify\";\nimport UserProfileRegistration from \"./ChildComponents/UserProfileRegistration\";\nimport LoginAccount from \"./ChildComponents/LoginAccount\";\nimport UserHome from \"./ChildComponents/UserHome\";\nimport HomeScreen from \"./ChildComponents/HomeScreen\";\nimport UserSearchHome from \"./ChildComponents/HomeScreenPages/UserSearchHome\";\nimport MiniQuizHome from \"./ChildComponents/HomeScreenPages/MiniQuizHome\";\nimport QuizTree from \"./ChildComponents/QuizTree\";\nimport EngineeringPage from \"./ChildComponents/HomeScreenPages/FieldPages/EngineeringPage\";\nimport SearchPage from \"./ChildComponents/SearchPage\";\nimport OtherUserProfile from \"./ChildComponents/OtherUserProfile\";\nimport CompanyProfileRegistration from \"./ChildComponents/CompanyRegistration\";\nimport AllUserCompanies from \"./ChildComponents/AllUserCompanies\";\nimport CompanyProfile from \"./ChildComponents/CompanyProfile\";\nimport AllJobsUserProfile from \"./ChildComponents/AllJobsUserProfile\";\nimport AllRequestsUserProfile from \"./ChildComponents/AllRequestsUserProfile\";\nimport PostNewJob from \"./ChildComponents/PostNewJob\";\nimport JobProfile from \"./ChildComponents/JobProfile\";\nimport JobAppPage from \"./ChildComponents/JobAppPage\";\nimport AllUserConnections from \"./ChildComponents/AllUserConnections\";\nimport MyUserProfile from \"./ChildComponents/MyUserProfile\";\nimport OtherCompanyProfilePage from \"./ChildComponents/OtherCompanyProfilePage\";\nimport React,{useState,useEffect} from \"react\";\nimport { BrowserRouter,Routes,Route } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\n\nconst ComponentsLists = () => {\n\n    const [accounts,setAccounts] = useState([]);\n\n    const fetchUser = async(userId) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(`http://localhost:8000/users/${userId}`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const fetchFullUser = async(userId) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(`http://localhost:8000/full/users/${userId}`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const fetchPostUser = async(userId) => {\n        try{\n            const response = await fetch(`http://localhost:8000/users/posts/${userId}`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const userSearch = async(firstName,lastName) => {\n        try{\n        // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n        const response = await fetch(`http://localhost:8000/home/users?first_name=${firstName}&last_name=${lastName}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        })\n        if (!response.ok){\n            return;\n        }\n        const responseData = response.json();\n        return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n\n    }\n\n    const fetchNotAddedSkills = async() => {\n        try{\n            const token = localStorage.getItem(\"authToken\")\n            const response = await fetch(`http://localhost:8000/home/user/not-added/skills/`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const fetchAddedSkills = async() => {\n        try{\n            const token = localStorage.getItem(\"authToken\")\n            const response = await fetch(`http://localhost:8000/home/user/skills/`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const fetchAllSkills = async() => {\n        try{\n            const response = await fetch(`http://localhost:8000/all-skills/`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const fetchUserConnections = async() => {\n        try{\n        // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n        const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(`http://localhost:8000/users/connections/`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n            \n        })\n        if (!response.ok){\n            return;\n        }\n        const responseData = response.json();\n        return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n\n    }\n\n    const fetchUserPendingRequests = async() => {\n        try{\n        // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n        const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(`http://localhost:8000/users/friend-requests/`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n            \n        })\n        if (!response.ok){\n            return;\n        }\n        const responseData = response.json();\n        return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n\n    }\n\n    const jobSearch = async(firstName,lastName) => {\n        try{\n        // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n        const response = await fetch(`http://localhost:8000/home/jobs?first_name=${firstName}&last_name=${lastName}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        })\n        if (!response.ok){\n            return;\n        }\n        const responseData = response.json();\n        return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n\n    }\n\n    const fetchJob = async(jobId) => {\n        try{\n            const response = await fetch(`http://localhost:8000/home/jobs/${jobId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n            const responseData = response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Couldn't fetch job due to this error: \",error);\n            alert(`Error occured while fetching job ${error}`);\n        }\n    }\n\n    const fetchJobQuestions = async(jobId) => {\n        try{\n            const response = await fetch(`http://localhost:8000/home/jobs/questions/${jobId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n            const responseData = response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Couldn't fetch job due to this error: \",error);\n            alert(`Error occured while fetching job ${error}`);\n        }\n    }\n\n    const fetchAllJobs = async() => {\n        // const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(\"http://localhost:8000/home/jobs/all/\",{\n            method: \"GET\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n            },\n        })\n        const responseData = await response.json();\n        return responseData\n    }\n\n    const companySearch = async(firstName,lastName) => {\n        try{\n        // const response = await fetch(`http://localhost:8000/home/users?first_name=${first_name_user}&last_name=${last_name_user}`)\n        const response = await fetch(`http://localhost:8000/home/companies?first_name=${firstName}&last_name=${lastName}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        })\n        if (!response.ok){\n            return;\n        }\n        const responseData = response.json();\n        return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n\n    }\n\n    const fetchCompany = async(companyId) => {\n        try{\n            const response = await fetch(`http://localhost:8000/home/companies/${companyId}`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const fetchCompanyJobs = async(companyId) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(`http://localhost:8000/home/companies/jobs/${companyId}`,{\n                method:\"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const fetchUserCompany = async(companyId) => {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(`http://localhost:8000/home/user-companies/${companyId}`,{\n            method: \"GET\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n        const responseData = await response.json();\n        return responseData;\n    }\n\n    const fetchUserCompanies = async() => {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(\"http://localhost:8000/home/user-companies/\",{\n            method: \"GET\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n        const responseData = await response.json();\n        return responseData;\n    }\n\n\n    const fetchAllPosts = async() => {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(\"http://localhost:8000/all-posts/\",{\n            method: \"GET\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        })\n        const responseData = await response.json();\n        return responseData\n    }\n\n\n    const createAccount = async(userInfo) => {\n        try{\n            console.log(\"Payload sent\");\n            const response = await fetch(\"http://localhost:8000/register/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\"\n            },\n            body: JSON.stringify(userInfo),\n        });\n        console.log(response);\n        // if (!response.ok){\n        //     alert(\"Username or Email already exist, Please a choose a different one\");\n        //     return;\n        // }\n\n        if (!response.ok){\n            // const errorData = response.json().catch();\n            // console.log(`Backend Error ${response.status}:`,errorData);\n            // throw new Error(`HTTP Error: ${response.status} - ${JSON.stringify(errorData)}`);\n            return response.text().then(text => {\n                throw new Error(`HTTP error! status: ${response.status}, response: ${text}`)});\n        }\n\n        const newAccount = await response.json();\n        setAccounts((oldAccounts) => [...oldAccounts,newAccount]);\n        console.log(newAccount);\n        // console.log(response.data)\n        localStorage.setItem(\"currUserId\",newAccount.user_id);\n        localStorage.setItem(\"authToken\",newAccount.access_token);\n        // localStorage.setItem(\"currUserDetails\",newAccount);\n        return newAccount;\n\n    }\n    catch(error){\n        console.log(`Couldn't create new Account: ${error}`);\n        alert(`Account couldn't be created ${error}`);\n        return;\n    }\n\n\n\n\n    }\n    const createProfile = async(profileInfo) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(\"http://localhost:8000/register/user_profile/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`,\n                },\n                body: JSON.stringify(profileInfo),\n            })\n            const responseData = response.json();\n    }\n    catch(error){\n        console.log(\"Couldn't create profile\",error);\n        alert(`Couldn't create profile ${error}`);\n        return;\n    }\n    }\n\n    const addUserSkills = async(skills) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(`http://localhost:8000/home/users/skills/`,{\n                method:\"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`,\n\n                },\n                body: JSON.stringify(skills)\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            console.log(responseData);\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const addUserWorkExperience = async(workExperience) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(`http://localhost:8000/home/work-experience/`,{\n                method:\"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`,\n                },\n                body: JSON.stringify(workExperience)\n            })\n            if (!response.ok){\n                return;\n            }\n            const responseData = await response.json();\n            console.log(responseData);\n            return responseData;\n        }\n        catch(error){\n            console.log(\"Error fetching user\",error);\n            alert(`Could not fetch the user ${error}`);\n        }\n    }\n\n    const createCompanyProfile = async(companyInfo) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(\"http://localhost:8000/home/register/company_profile\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`,\n                },\n                body: JSON.stringify(companyInfo),\n            })\n            const responseData = response.json();\n            return responseData;\n    }\n    catch(error){\n        console.log(\"Couldn't create profile\",error);\n        alert(`Couldn't create profile ${error}`);\n        return;\n    }\n    }\n\n    const createJob = async(jobInfo) => {\n        try{\n            const token = localStorage.getItem(\"authToken\");\n            const response = await fetch(\"http://localhost:8000/home/createjob/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`,\n                },\n                body: JSON.stringify(jobInfo),\n            })\n            const responseData = response.json();\n            return responseData;\n    }\n    catch(error){\n        console.log(\"Couldn't create profile\",error);\n        alert(`Couldn't create profile ${error}`);\n        return;\n    }\n    }\n\n    const createPost = async(postData) => {\n        const token = localStorage.getItem(\"authToken\");\n        console.log(\"Here's the token: \", token);\n        const response = await fetch(\"http://localhost:8000/home/createpost/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`,\n            },\n            body: JSON.stringify(postData),\n        })\n        const responseData = await response.json();\n        console.log(\"Here's what the backend response says: \",responseData);\n        return responseData;\n    }\n\n    const sendConnection = async(userId) => {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(`http://localhost:8000/home/connection-request/?user_id=${userId}`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": `application/json`,\n                'Authorization': `Bearer ${token}`\n            },\n            // body: JSON.stringify(userId),\n        })\n        const responseData = await response.json();\n        return responseData;\n    }\n\n    const loginAccount = async(accountInfo) => {\n        try{\n        const response = await fetch(\"http://localhost:8000/login/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(accountInfo),\n        })\n        if (!response.ok){\n            console.log(\"Couldn't login account\");\n            alert(\"Can't login\");\n        }\n        const responseData = await response.json();\n        console.log(\"Here's the login response\",responseData);\n        console.log(\"Token login: \",responseData.access_token);\n        localStorage.setItem(\"authToken\",responseData.access_token);\n        localStorage.setItem(\"currUserId\",responseData.user_id);\n        return responseData;\n    }\n    catch(error){\n        console.log(\"Failed to sign in user\",error);\n        alert(error);\n        return;\n    }\n        \n    }\n\n    const verifyAccount = async(token) =>{\n        const response = await fetch(`http://localhost:8000/register/verify-email?token=${token}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify(token),\n        })\n    }\n\n    const resendEmailVerify = async(userId) => {\n        try{\n            const response = await fetch(`http://localhost:8000/register/resend/${userId}`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                },\n                // body: JSON.stringify(userId),\n            })\n            const responseData = await response.json();\n            console.log(\"Here's the user id \",localStorage.getItem(\"currUserId\"));\n\n        }\n        catch(error){\n            console.log(\"Couldn't send verification email\",error);\n            alert(`Email unable to send ${error}`);\n            return;\n        }\n    }\n\n    return (\n        <>\n        <div>\n        <Routes>\n        <Route path=\"/\" element={<HomeScreen/>}/>\n        <Route path=\"/homepage/search/\" element={<UserSearchHome userSearch={userSearch}/>}/>\n        <Route path=\"/homepage/mini-quiz/\" element={<MiniQuizHome node={QuizTree}/>}/>\n        <Route path=\"/homepage/engineering-info/\" element={<EngineeringPage/>}/>\n        <Route path=\"/register/\" element={<AccountRegister createAccount={createAccount}/>}/>\n        <Route path=\"/user/login/\" element={<LoginAccount loginAccount={loginAccount}/>}/>\n        <Route path=\"/register/await\" element={<AccountRegisterAwait resendEmail={resendEmailVerify} storage={localStorage}/>}/>\n        <Route path=\"/register/verify-email\" element={<AccountVerify storage={localStorage}/>}/>\n        <Route path=\"/register/profile/\" element={<UserProfileRegistration createProfile={createProfile}/>}/>\n        <Route path=\"/signed-in/feed/\" element={<UserHome createPost={createPost} fetchPosts={fetchAllPosts} fetchUser={fetchUser} storage={localStorage} fetchJobs={fetchAllJobs}/>}/>\n\n        <Route path=\"/signed-in/feed/user-profile/\" element={<MyUserProfile storage={localStorage} fetchUser={fetchUser} fetchUserSkills={fetchAddedSkills} fetchAllSkills={fetchNotAddedSkills} addUserSkills={addUserSkills} addUserWorkExperience={addUserWorkExperience}/>}/>\n\n        <Route path=\"/signed-in/feed/suggested-jobs\" element={<AllJobsUserProfile fetchAllJobs={fetchAllJobs} storage={localStorage}/>}/>\n        <Route path=\"/signed-in/feed/connections\" element={<AllUserConnections fetchAllConnections={fetchUserConnections} storage={localStorage} fetchUser={fetchUser}/>}/>\n        <Route path=\"/signed-in/feed/connections/requests\" element={<AllRequestsUserProfile fetchAllRequests={fetchUserPendingRequests} storage={localStorage}/>}/>\n\n        <Route path=\"/signed-in/feed/job/:jobId\" element={<JobProfile fetchJob={fetchJob} storage={localStorage}/>}/>\n\n        <Route path=\"/signed-in/feed/job/apply/:jobId\" element={<JobAppPage fetchQuestions={fetchJobQuestions} storage={localStorage}/>}/>\n        <Route path=\"/signed-in/feed/user-companies\" element={<AllUserCompanies fetchCompanies={fetchUserCompanies} loadCompany={fetchUserCompany} storage={localStorage}/>}/>\n        <Route path=\"/signed-in/feed/user-companies/:companyId\" element={<CompanyProfile fetchCompany={fetchUserCompany} storage={localStorage} />}/>\n        <Route path=\"/signed-in/feed/user-companies/new-job\" element={<PostNewJob createJob={createJob} storage={localStorage}/>}/>\n        <Route path=\"/signed-in/register/company\" element={<CompanyProfileRegistration createProfile={createCompanyProfile} storage={localStorage}/>}/>\n        <Route path=\"/signed-in/feed/search-results\" element={<SearchPage fetchUsersByName={userSearch} storage={localStorage} fetchUser={fetchUser} fetchJobsByName={jobSearch} fetchCompaniesByName={companySearch} fetchJob={fetchJob} fetchCompany={fetchCompany}/>}/>\n        <Route path=\"/signed-in/feed/user/:userId\" element={<OtherUserProfile storage={localStorage} getUser={fetchFullUser} sendRequest={sendConnection} getPosts={fetchPostUser}/>}/>\n        <Route path=\"/signed-in/feed/company/:companyId\" element={<OtherCompanyProfilePage storage={localStorage} getCompany={fetchCompany} getIndividualJob={fetchJob} getJobs={fetchCompanyJobs}/>}/>\n\n        </Routes>\n        </div>\n        </>\n    )\n}\n\nexport default ComponentsLists;"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,uBAAuB,MAAM,2CAA2C;AAC/E,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,cAAc,MAAM,kDAAkD;AAC7E,OAAOC,YAAY,MAAM,gDAAgD;AACzE,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,eAAe,MAAM,8DAA8D;AAC1F,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,gBAAgB,MAAM,oCAAoC;AACjE,OAAOC,0BAA0B,MAAM,uCAAuC;AAC9E,OAAOC,gBAAgB,MAAM,oCAAoC;AACjE,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,kBAAkB,MAAM,sCAAsC;AACrE,OAAOC,sBAAsB,MAAM,0CAA0C;AAC7E,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,kBAAkB,MAAM,sCAAsC;AACrE,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,uBAAuB,MAAM,2CAA2C;AAC/E,OAAOC,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,aAAa,EAACC,MAAM,EAACC,KAAK,QAAQ,kBAAkB;AAC7D,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMc,SAAS,GAAG,MAAMC,MAAM,IAAK;IAC/B,IAAG;MACC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BL,MAAM,EAAE,EAAC;QACjEM,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMI,aAAa,GAAG,MAAMf,MAAM,IAAK;IACnC,IAAG;MACC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCL,MAAM,EAAE,EAAC;QACtEM,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMK,aAAa,GAAG,MAAMhB,MAAM,IAAK;IACnC,IAAG;MACC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCL,MAAM,EAAE,EAAC;QACvEM,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMM,UAAU,GAAG,MAAAA,CAAMC,SAAS,EAACC,QAAQ,KAAK;IAC5C,IAAG;MACH;MACA,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+Ca,SAAS,cAAcC,QAAQ,EAAE,EAAE;QAC3Gb,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IACnB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EAEJ,CAAC;EAED,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAW;IACnC,IAAG;MACC,MAAMnB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAC;QAC7EC,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAW;IAChC,IAAG;MACC,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAC;QACnEC,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAW;IAC9B,IAAG;MACC,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAC;QAC7DC,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMY,oBAAoB,GAAG,MAAAA,CAAA,KAAW;IACpC,IAAG;MACH;MACA,MAAMtB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACrEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC;MAEJ,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IACnB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EAEJ,CAAC;EAED,MAAMa,wBAAwB,GAAG,MAAAA,CAAA,KAAW;IACxC,IAAG;MACH;MACA,MAAMvB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QACzEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC;MAEJ,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IACnB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EAEJ,CAAC;EAED,MAAMc,SAAS,GAAG,MAAAA,CAAMP,SAAS,EAACC,QAAQ,KAAK;IAC3C,IAAG;MACH;MACA,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8Ca,SAAS,cAAcC,QAAQ,EAAE,EAAE;QAC1Gb,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IACnB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EAEJ,CAAC;EAED,MAAMe,QAAQ,GAAG,MAAMC,KAAK,IAAK;IAC7B,IAAG;MACC,MAAMvB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCsB,KAAK,EAAE,EAAE;QACrErB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,MAAME,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAACF,KAAK,CAAC;MAC3DG,KAAK,CAAC,oCAAoCH,KAAK,EAAE,CAAC;IACtD;EACJ,CAAC;EAED,MAAMiB,iBAAiB,GAAG,MAAMD,KAAK,IAAK;IACtC,IAAG;MACC,MAAMvB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CsB,KAAK,EAAE,EAAE;QAC/ErB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,MAAME,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAACF,KAAK,CAAC;MAC3DG,KAAK,CAAC,oCAAoCH,KAAK,EAAE,CAAC;IACtD;EACJ,CAAC;EAED,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAW;IAC5B;IACA,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAC;MAChEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC,CAAC;IACF,MAAME,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACvB,CAAC;EAED,MAAMqB,aAAa,GAAG,MAAAA,CAAMZ,SAAS,EAACC,QAAQ,KAAK;IAC/C,IAAG;MACH;MACA,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmDa,SAAS,cAAcC,QAAQ,EAAE,EAAE;QAC/Gb,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IACnB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EAEJ,CAAC;EAED,MAAMoB,YAAY,GAAG,MAAMC,SAAS,IAAK;IACrC,IAAG;MACC,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC2B,SAAS,EAAE,EAAC;QAC7E1B,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMsB,gBAAgB,GAAG,MAAMD,SAAS,IAAK;IACzC,IAAG;MACC,MAAM/B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C2B,SAAS,EAAE,EAAC;QAClF1B,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAOD,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMuB,gBAAgB,GAAG,MAAMF,SAAS,IAAK;IACzC,MAAM/B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C2B,SAAS,EAAE,EAAC;MAClF1B,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAE,UAAUN,KAAK;MACpC;IACJ,CAAC,CAAC;IACF,MAAMQ,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACvB,CAAC;EAED,MAAM0B,kBAAkB,GAAG,MAAAA,CAAA,KAAW;IAClC,MAAMlC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAC;MACtEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAE,UAAUN,KAAK;MACpC;IACJ,CAAC,CAAC;IACF,MAAMQ,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACvB,CAAC;EAGD,MAAM2B,aAAa,GAAG,MAAAA,CAAA,KAAW;IAC7B,MAAMnC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAC;MAC5DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAE,UAAUN,KAAK;MACpC;IACJ,CAAC,CAAC;IACF,MAAMQ,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACvB,CAAC;EAGD,MAAM4B,aAAa,GAAG,MAAMC,QAAQ,IAAK;IACrC,IAAG;MACC1B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAC;QACnB,CAAC;QACDgC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ;MACjC,CAAC,CAAC;MACF1B,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;MACrB;MACA;MACA;MACA;;MAEA,IAAI,CAACA,QAAQ,CAACI,EAAE,EAAC;QACb;QACA;QACA;QACA,OAAOJ,QAAQ,CAACsC,IAAI,CAAC,CAAC,CAACC,IAAI,CAACD,IAAI,IAAI;UAChC,MAAM,IAAIE,KAAK,CAAC,uBAAuBxC,QAAQ,CAACyC,MAAM,eAAeH,IAAI,EAAE,CAAC;QAAA,CAAC,CAAC;MACtF;MAEA,MAAMI,UAAU,GAAG,MAAM1C,QAAQ,CAACM,IAAI,CAAC,CAAC;MACxCZ,WAAW,CAAEiD,WAAW,IAAK,CAAC,GAAGA,WAAW,EAACD,UAAU,CAAC,CAAC;MACzDlC,OAAO,CAACC,GAAG,CAACiC,UAAU,CAAC;MACvB;MACA5C,YAAY,CAAC8C,OAAO,CAAC,YAAY,EAACF,UAAU,CAACG,OAAO,CAAC;MACrD/C,YAAY,CAAC8C,OAAO,CAAC,WAAW,EAACF,UAAU,CAACI,YAAY,CAAC;MACzD;MACA,OAAOJ,UAAU;IAErB,CAAC,CACD,OAAMnC,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,gCAAgCF,KAAK,EAAE,CAAC;MACpDG,KAAK,CAAC,+BAA+BH,KAAK,EAAE,CAAC;MAC7C;IACJ;EAKA,CAAC;EACD,MAAMwC,aAAa,GAAG,MAAMC,WAAW,IAAK;IACxC,IAAG;MACC,MAAMnD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC,CAAC;QACDsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,WAAW;MACpC,CAAC,CAAC;MACF,MAAM3C,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC5C,CAAC,CACD,OAAMC,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACF,KAAK,CAAC;MAC5CG,KAAK,CAAC,2BAA2BH,KAAK,EAAE,CAAC;MACzC;IACJ;EACA,CAAC;EAED,MAAM0C,aAAa,GAAG,MAAMC,MAAM,IAAK;IACnC,IAAG;MACC,MAAMrD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAC;QACpEC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QAEpC,CAAC;QACDsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACa,MAAM;MAC/B,CAAC,CAAC;MACF,IAAI,CAAClD,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1CE,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;MACzB,OAAOA,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAM4C,qBAAqB,GAAG,MAAMC,cAAc,IAAK;IACnD,IAAG;MACC,MAAMvD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAC;QACvEC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC,CAAC;QACDsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACe,cAAc;MACvC,CAAC,CAAC;MACF,IAAI,CAACpD,QAAQ,CAACI,EAAE,EAAC;QACb;MACJ;MACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1CE,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;MACzB,OAAOA,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,KAAK,CAAC;MACxCG,KAAK,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC9C;EACJ,CAAC;EAED,MAAM8C,oBAAoB,GAAG,MAAMC,WAAW,IAAK;IAC/C,IAAG;MACC,MAAMzD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqD,EAAE;QAChFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC,CAAC;QACDsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACiB,WAAW;MACpC,CAAC,CAAC;MACF,MAAMjD,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IAC3B,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACF,KAAK,CAAC;MAC5CG,KAAK,CAAC,2BAA2BH,KAAK,EAAE,CAAC;MACzC;IACJ;EACA,CAAC;EAED,MAAMgD,SAAS,GAAG,MAAMC,OAAO,IAAK;IAChC,IAAG;MACC,MAAM3D,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK;QACpC,CAAC;QACDsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACmB,OAAO;MAChC,CAAC,CAAC;MACF,MAAMnD,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpC,OAAOD,YAAY;IAC3B,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACF,KAAK,CAAC;MAC5CG,KAAK,CAAC,2BAA2BH,KAAK,EAAE,CAAC;MACzC;IACJ;EACA,CAAC;EAED,MAAMkD,UAAU,GAAG,MAAMC,QAAQ,IAAK;IAClC,MAAM7D,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/CS,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEZ,KAAK,CAAC;IACxC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUN,KAAK;MACpC,CAAC;MACDsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACqB,QAAQ;IACjC,CAAC,CAAC;IACF,MAAMrD,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1CE,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAACJ,YAAY,CAAC;IACnE,OAAOA,YAAY;EACvB,CAAC;EAED,MAAMsD,cAAc,GAAG,MAAM/D,MAAM,IAAK;IACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0DL,MAAM,EAAE,EAAC;MAC5FM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUN,KAAK;MACpC;MACA;IACJ,CAAC,CAAC;IACF,MAAMQ,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACvB,CAAC;EAED,MAAMuD,YAAY,GAAG,MAAMC,WAAW,IAAK;IACvC,IAAG;MACH,MAAM7D,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDgC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACwB,WAAW;MACpC,CAAC,CAAC;MACF,IAAI,CAAC7D,QAAQ,CAACI,EAAE,EAAC;QACbI,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCC,KAAK,CAAC,aAAa,CAAC;MACxB;MACA,MAAML,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1CE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACJ,YAAY,CAAC;MACrDG,OAAO,CAACC,GAAG,CAAC,eAAe,EAACJ,YAAY,CAACyC,YAAY,CAAC;MACtDhD,YAAY,CAAC8C,OAAO,CAAC,WAAW,EAACvC,YAAY,CAACyC,YAAY,CAAC;MAC3DhD,YAAY,CAAC8C,OAAO,CAAC,YAAY,EAACvC,YAAY,CAACwC,OAAO,CAAC;MACvD,OAAOxC,YAAY;IACvB,CAAC,CACD,OAAME,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAACF,KAAK,CAAC;MAC3CG,KAAK,CAACH,KAAK,CAAC;MACZ;IACJ;EAEA,CAAC;EAED,MAAMuD,aAAa,GAAG,MAAMjE,KAAK,IAAI;IACjC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDJ,KAAK,EAAE,EAAE;MACvFK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAC;MACnB,CAAC;MACDgC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxC,KAAK;IAC9B,CAAC,CAAC;EACN,CAAC;EAED,MAAMkE,iBAAiB,GAAG,MAAMnE,MAAM,IAAK;IACvC,IAAG;MACC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCL,MAAM,EAAE,EAAE;QAC5EM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAC;QACnB;QACA;MACJ,CAAC,CAAC;MACF,MAAME,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1CE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACX,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;IAEzE,CAAC,CACD,OAAMQ,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAACF,KAAK,CAAC;MACrDG,KAAK,CAAC,wBAAwBH,KAAK,EAAE,CAAC;MACtC;IACJ;EACJ,CAAC;EAED,oBACInB,OAAA,CAAAE,SAAA;IAAA0E,QAAA,eACA5E,OAAA;MAAA4E,QAAA,eACA5E,OAAA,CAACJ,MAAM;QAAAgF,QAAA,gBACP5E,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,GAAG;UAACC,OAAO,eAAE9E,OAAA,CAAC1B,UAAU;YAAAyG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzClF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,mBAAmB;UAACC,OAAO,eAAE9E,OAAA,CAACzB,cAAc;YAACkD,UAAU,EAAEA;UAAW;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACrFlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,sBAAsB;UAACC,OAAO,eAAE9E,OAAA,CAACxB,YAAY;YAAC2G,IAAI,EAAE1G;UAAS;YAAAsG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9ElF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,6BAA6B;UAACC,OAAO,eAAE9E,OAAA,CAACtB,eAAe;YAAAqG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACxElF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,YAAY;UAACC,OAAO,eAAE9E,OAAA,CAAChC,eAAe;YAAC6E,aAAa,EAAEA;UAAc;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACrFlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,cAAc;UAACC,OAAO,eAAE9E,OAAA,CAAC5B,YAAY;YAACoG,YAAY,EAAEA;UAAa;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClFlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,iBAAiB;UAACC,OAAO,eAAE9E,OAAA,CAAC/B,oBAAoB;YAACmH,WAAW,EAAET,iBAAkB;YAACU,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACxHlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,wBAAwB;UAACC,OAAO,eAAE9E,OAAA,CAAC9B,aAAa;YAACmH,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACxFlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,oBAAoB;UAACC,OAAO,eAAE9E,OAAA,CAAC7B,uBAAuB;YAACwF,aAAa,EAAEA;UAAc;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACrGlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,kBAAkB;UAACC,OAAO,eAAE9E,OAAA,CAAC3B,QAAQ;YAACgG,UAAU,EAAEA,UAAW;YAACiB,UAAU,EAAE1C,aAAc;YAACrC,SAAS,EAAEA,SAAU;YAAC8E,OAAO,EAAE3E,YAAa;YAAC6E,SAAS,EAAElD;UAAa;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE/KlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,+BAA+B;UAACC,OAAO,eAAE9E,OAAA,CAACV,aAAa;YAAC+F,OAAO,EAAE3E,YAAa;YAACH,SAAS,EAAEA,SAAU;YAACiF,eAAe,EAAE3D,gBAAiB;YAACC,cAAc,EAAEF,mBAAoB;YAACiC,aAAa,EAAEA,aAAc;YAACE,qBAAqB,EAAEA;UAAsB;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAEzQlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,gCAAgC;UAACC,OAAO,eAAE9E,OAAA,CAAChB,kBAAkB;YAACqD,YAAY,EAAEA,YAAa;YAACgD,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACjIlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,6BAA6B;UAACC,OAAO,eAAE9E,OAAA,CAACX,kBAAkB;YAACoG,mBAAmB,EAAE1D,oBAAqB;YAACsD,OAAO,EAAE3E,YAAa;YAACH,SAAS,EAAEA;UAAU;YAAAwE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnKlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,sCAAsC;UAACC,OAAO,eAAE9E,OAAA,CAACf,sBAAsB;YAACyG,gBAAgB,EAAE1D,wBAAyB;YAACqD,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE3JlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,4BAA4B;UAACC,OAAO,eAAE9E,OAAA,CAACb,UAAU;YAAC+C,QAAQ,EAAEA,QAAS;YAACmD,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE7GlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,kCAAkC;UAACC,OAAO,eAAE9E,OAAA,CAACZ,UAAU;YAACuG,cAAc,EAAEvD,iBAAkB;YAACiD,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClIlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,gCAAgC;UAACC,OAAO,eAAE9E,OAAA,CAAClB,gBAAgB;YAAC8G,cAAc,EAAEjD,kBAAmB;YAACkD,WAAW,EAAEnD,gBAAiB;YAAC2C,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtKlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,2CAA2C;UAACC,OAAO,eAAE9E,OAAA,CAACjB,cAAc;YAACwD,YAAY,EAAEG,gBAAiB;YAAC2C,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC7IlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,wCAAwC;UAACC,OAAO,eAAE9E,OAAA,CAACd,UAAU;YAACiF,SAAS,EAAEA,SAAU;YAACkB,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3HlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,6BAA6B;UAACC,OAAO,eAAE9E,OAAA,CAACnB,0BAA0B;YAAC8E,aAAa,EAAEM,oBAAqB;YAACoB,OAAO,EAAE3E;UAAa;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/IlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,gCAAgC;UAACC,OAAO,eAAE9E,OAAA,CAACrB,UAAU;YAACmH,gBAAgB,EAAErE,UAAW;YAAC4D,OAAO,EAAE3E,YAAa;YAACH,SAAS,EAAEA,SAAU;YAACwF,eAAe,EAAE9D,SAAU;YAAC+D,oBAAoB,EAAE1D,aAAc;YAACJ,QAAQ,EAAEA,QAAS;YAACK,YAAY,EAAEA;UAAa;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClQlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,8BAA8B;UAACC,OAAO,eAAE9E,OAAA,CAACpB,gBAAgB;YAACyG,OAAO,EAAE3E,YAAa;YAACuF,OAAO,EAAE1E,aAAc;YAAC2E,WAAW,EAAE3B,cAAe;YAAC4B,QAAQ,EAAE3E;UAAc;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/KlF,OAAA,CAACH,KAAK;UAACgF,IAAI,EAAC,oCAAoC;UAACC,OAAO,eAAE9E,OAAA,CAACT,uBAAuB;YAAC8F,OAAO,EAAE3E,YAAa;YAAC0F,UAAU,EAAE7D,YAAa;YAAC8D,gBAAgB,EAAEnE,QAAS;YAACoE,OAAO,EAAE7D;UAAiB;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACJ,CAAC;AAEX,CAAC;AAAA9E,EAAA,CA/oBKD,eAAe;AAAAoG,EAAA,GAAfpG,eAAe;AAipBrB,eAAeA,eAAe;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}