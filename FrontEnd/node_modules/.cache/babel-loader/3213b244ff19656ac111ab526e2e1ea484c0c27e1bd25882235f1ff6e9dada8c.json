{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/AllUserCompanies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllUserCompanies = ({\n  fetchCompanies\n}) => {\n  _s();\n  const [userCompanies, setUserCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getCompanies();\n  }, []);\n  const getCompanies = async () => {\n    try {\n      setLoading(true);\n      const response = await fetchCompanies();\n      console.log(response);\n      // Ensure response is an array before setting state\n      if (Array.isArray(response)) {\n        setUserCompanies(response);\n      } else {\n        setUserCompanies([]);\n        setError(\"Received invalid data format\");\n      }\n    } catch (err) {\n      setError(err.message);\n      setUserCompanies([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading companies...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Companies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), userCompanies.map(company => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Company name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: company.company_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Industry:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: company.industry_field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Date Created:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: company.date_created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(AllUserCompanies, \"iifAV2hgaEKqyEPd2xXoFJGCUhk=\", false, function () {\n  return [useNavigate];\n});\n_c = AllUserCompanies;\nexport default AllUserCompanies;\nvar _c;\n$RefreshReg$(_c, \"AllUserCompanies\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AllUserCompanies","fetchCompanies","_s","userCompanies","setUserCompanies","loading","setLoading","error","setError","navigate","getCompanies","response","console","log","Array","isArray","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","company","company_name","industry_field","date_created","_c","$RefreshReg$"],"sources":["/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/AllUserCompanies.jsx"],"sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import { useSearchParams } from \"react-router-dom\";\n\nconst AllUserCompanies = ({fetchCompanies}) => {\n    const [userCompanies, setUserCompanies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        getCompanies();\n    }, []);\n\n    const getCompanies = async () => {\n        try {\n            setLoading(true);\n            const response = await fetchCompanies();\n            console.log(response);\n            // Ensure response is an array before setting state\n            if (Array.isArray(response)) {\n                setUserCompanies(response);\n            } else {\n                setUserCompanies([]);\n                setError(\"Received invalid data format\");\n            }\n        } catch (err) {\n            setError(err.message);\n            setUserCompanies([]);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    if (loading) return <div>Loading companies...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n\n\n    return (\n        <>\n        <div>\n        <div>\n        <h1>Companies</h1>\n        {userCompanies.map((company)=>(\n            <li>\n            <button>\n            <h2>Company name:</h2>\n            <h3>{company.company_name}</h3> \n            <h2>Industry:</h2> \n            <h3>{company.industry_field}</h3>  \n            <h2>Date Created:</h2>\n            <h3>{company.date_created}</h3>\n            </button> \n            </li>\n        ))}\n        </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default AllUserCompanies;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,gBAAgB,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZiB,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACAJ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMK,QAAQ,GAAG,MAAMV,cAAc,CAAC,CAAC;MACvCW,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACA,IAAIG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;QACzBP,gBAAgB,CAACO,QAAQ,CAAC;MAC9B,CAAC,MAAM;QACHP,gBAAgB,CAAC,EAAE,CAAC;QACpBI,QAAQ,CAAC,8BAA8B,CAAC;MAC5C;IACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACVR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACrBb,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,IAAID,OAAO,EAAE,oBAAOR,OAAA;IAAAqB,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnD,IAAIf,KAAK,EAAE,oBAAOV,OAAA;IAAAqB,QAAA,GAAK,SAAO,EAACX,KAAK;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAI3C,oBACIzB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACArB,OAAA;MAAAqB,QAAA,eACArB,OAAA;QAAAqB,QAAA,gBACArB,OAAA;UAAAqB,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjBnB,aAAa,CAACoB,GAAG,CAAEC,OAAO,iBACvB3B,OAAA;UAAAqB,QAAA,eACArB,OAAA;YAAAqB,QAAA,gBACArB,OAAA;cAAAqB,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBzB,OAAA;cAAAqB,QAAA,EAAKM,OAAO,CAACC;YAAY;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/BzB,OAAA;cAAAqB,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBzB,OAAA;cAAAqB,QAAA,EAAKM,OAAO,CAACE;YAAc;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjCzB,OAAA;cAAAqB,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBzB,OAAA;cAAAqB,QAAA,EAAKM,OAAO,CAACG;YAAY;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACJ,CAAC;AAGX,CAAC;AAAApB,EAAA,CAzDKF,gBAAgB;EAAA,QAIDL,WAAW;AAAA;AAAAiC,EAAA,GAJ1B5B,gBAAgB;AA2DtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}