{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/JobAppPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobAppPage = ({\n  fetchQuestions,\n  storage\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [questionTypes, setQuestionTypes] = useState([]);\n  const [questionAnswers, setQuestionAnswers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const questionsperPage = 4;\n  const indexofLastQuestion = currentPage * questionsperPage;\n  const indexofFirsttQuestion = indexofLastQuestion - questionsperPage;\n  // const currQuestions = questions.slice(indexofFirsttQuestion,indexofLastQuestion);\n\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n  const loadQuestions = async () => {\n    const response = await fetchQuestions(storage.getItem(\"jobId\"));\n    setQuestions(response.questions);\n    setQuestionTypes(response.question_types);\n    setQuestionAnswers(response.answers);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: currQuestions.map((question, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: question\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(JobAppPage, \"U1zZtRL8yFjWXGhrKB8bEvY65Is=\");\n_c = JobAppPage;\nexport default JobAppPage;\nvar _c;\n$RefreshReg$(_c, \"JobAppPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","JobAppPage","fetchQuestions","storage","_s","questions","setQuestions","questionTypes","setQuestionTypes","questionAnswers","setQuestionAnswers","currentPage","setCurrentPage","questionsperPage","indexofLastQuestion","indexofFirsttQuestion","loadQuestions","response","getItem","question_types","answers","children","currQuestions","map","question","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/JobAppPage.jsx"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\n\nconst JobAppPage = ({fetchQuestions,storage}) => {\n    const [questions,setQuestions] = useState([]);\n    const [questionTypes,setQuestionTypes] = useState([]);\n    const [questionAnswers,setQuestionAnswers] = useState([]);\n    const [currentPage,setCurrentPage] = useState(1);\n    const questionsperPage = 4;\n    const indexofLastQuestion = currentPage * questionsperPage;\n    const indexofFirsttQuestion = indexofLastQuestion- questionsperPage\n    // const currQuestions = questions.slice(indexofFirsttQuestion,indexofLastQuestion);\n\n    useEffect(()=>{\n        loadQuestions();\n    },[]);\n\n    const loadQuestions = async() => {\n        const response = await fetchQuestions(storage.getItem(\"jobId\"));\n        setQuestions(response.questions);\n        setQuestionTypes(response.question_types);\n        setQuestionAnswers(response.answers);\n    }\n\n    return (\n        <>\n        <div>\n        <ol>\n        {currQuestions.map((question,idx) => (\n            <li key={idx}>{question}</li>\n        ))}\n        </ol>\n        {/* <button onClick={(e) => setCurrentPage()}></button> */}\n        </div>\n        </>\n    )\n}\n\nexport default JobAppPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAC;EAACC,cAAc;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACY,aAAa,EAACC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACc,eAAe,EAACC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACgB,WAAW,EAACC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAChD,MAAMkB,gBAAgB,GAAG,CAAC;EAC1B,MAAMC,mBAAmB,GAAGH,WAAW,GAAGE,gBAAgB;EAC1D,MAAME,qBAAqB,GAAGD,mBAAmB,GAAED,gBAAgB;EACnE;;EAEAjB,SAAS,CAAC,MAAI;IACVoB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAW;IAC7B,MAAMC,QAAQ,GAAG,MAAMf,cAAc,CAACC,OAAO,CAACe,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/DZ,YAAY,CAACW,QAAQ,CAACZ,SAAS,CAAC;IAChCG,gBAAgB,CAACS,QAAQ,CAACE,cAAc,CAAC;IACzCT,kBAAkB,CAACO,QAAQ,CAACG,OAAO,CAAC;EACxC,CAAC;EAED,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACAvB,OAAA;MAAAuB,QAAA,eACAvB,OAAA;QAAAuB,QAAA,EACCC,aAAa,CAACC,GAAG,CAAC,CAACC,QAAQ,EAACC,GAAG,kBAC5B3B,OAAA;UAAAuB,QAAA,EAAeG;QAAQ,GAAdC,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA;EAAC,gBACJ,CAAC;AAEX,CAAC;AAAAzB,EAAA,CAjCKH,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}