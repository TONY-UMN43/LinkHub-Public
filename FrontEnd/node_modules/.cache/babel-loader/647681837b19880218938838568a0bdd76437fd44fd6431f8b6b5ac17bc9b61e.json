{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/AllJobsUserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./childComponents.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllJobsUserProfile = ({\n  fetchAllJobs,\n  storage\n}) => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const navigate = useNavigate('');\n  useEffect(() => {\n    loadJobs();\n  }, []);\n  const loadJobs = async () => {\n    const response = await fetchAllJobs();\n    // if (response.length !== 0){\n    setJobs(response);\n    // }\n  };\n  const handleClickJob = async jobId => {\n    storage.setItem(\"jobId\", jobId);\n    navigate();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => navigate(\"/signed-in/feed/\"),\n        className: \"back-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"home-search-job-result-list\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleClickJob(job.id),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"home-search-job-result-list-button \",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"title-job-home-screen-text\",\n              children: \"Job Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"title-job-home-screen-text\",\n              children: \"Salary:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"$\", job.salary, \"/hr\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"title-job-home-screen-text\",\n              children: \"Job Hours: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: job.job_hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(AllJobsUserProfile, \"eY4L+EIDYhHk1JTm3PW8JmOvg6A=\", false, function () {\n  return [useNavigate];\n});\n_c = AllJobsUserProfile;\nexport default AllJobsUserProfile;\nvar _c;\n$RefreshReg$(_c, \"AllJobsUserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AllJobsUserProfile","fetchAllJobs","storage","_s","jobs","setJobs","navigate","loadJobs","response","handleClickJob","jobId","setItem","children","onClick","e","className","fileName","_jsxFileName","lineNumber","columnNumber","map","job","onSubmit","id","title","salary","job_hours","_c","$RefreshReg$"],"sources":["/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/AllJobsUserProfile.jsx"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./childComponents.css\";\n\nconst AllJobsUserProfile = ({fetchAllJobs,storage}) => {\n    const [jobs,setJobs] = useState([]);\n    const navigate = useNavigate('');\n\n    useEffect(() => {\n        loadJobs();\n    },[])\n\n    const loadJobs = async() => {\n        const response = await fetchAllJobs();\n        // if (response.length !== 0){\n            setJobs(response);\n        // }\n    }\n\n    const handleClickJob = async(jobId) => {\n        storage.setItem(\"jobId\",jobId);\n        navigate();\n    }\n    return (\n        <>\n        <div>\n        <button onClick={(e) => navigate(\"/signed-in/feed/\") } className=\"back-button\">Back</button>\n        {jobs.map((job)=>(\n            <li key={job.id} className=\"home-search-job-result-list\"> \n            <form onSubmit={handleClickJob(job.id)}>\n            <button className=\"home-search-job-result-list-button \" >\n            <h3 className=\"title-job-home-screen-text\">Job Title:</h3>\n            <h4>{job.title}</h4>\n            <h3 className=\"title-job-home-screen-text\">Salary:</h3>\n            <h4>${job.salary}/hr</h4>\n            <h3 className=\"title-job-home-screen-text\">Job Hours: </h3>\n            <h4>{job.job_hours}</h4>\n            </button>\n            </form>\n            </li>\n        ))}\n        \n        </div>\n        </>\n    )\n\n}\n\nexport default AllJobsUserProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}