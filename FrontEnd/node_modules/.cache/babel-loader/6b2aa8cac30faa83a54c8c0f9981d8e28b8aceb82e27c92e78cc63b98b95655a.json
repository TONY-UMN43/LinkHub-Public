{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/AllUserCompanies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./childComponents.css\";\n\n// import { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllUserCompanies = ({\n  fetchCompanies,\n  loadCompany,\n  storage\n}) => {\n  _s();\n  const [userCompanies, setUserCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getCompanies();\n  }, []);\n  const getCompanies = async () => {\n    try {\n      setLoading(true);\n      const response = await fetchCompanies();\n      console.log(response);\n      // Ensure response is an array before setting state\n      if (Array.isArray(response)) {\n        setUserCompanies(response);\n      } else {\n        setUserCompanies([]);\n        setError(\"Received invalid data format\");\n      }\n    } catch (err) {\n      setError(err.message);\n      setUserCompanies([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCompanySelect = async companyId => {\n    const response = await loadCompany(companyId);\n    if (response.company_name) {\n      storage.setItem(\"companyId\", company);\n      navigate(`/signed-in/feed/user-companies/${companyId}`);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading companies...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => navigate(\"/signed-in/feed/\"),\n      className: \"back-button\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), userCompanies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userCompanies.map((company, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-of-user-companies\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-for-each-user-companies\",\n          type: \"submit\",\n          onClick: e => handleCompanySelect(company.company_id),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"button-company-header-for-each-user-companies\",\n            children: \"Company name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: company.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"button-company-industry-for-each-user-companies\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: company.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"button-date-company-for-each-user-companies\",\n            children: \"Date Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: company.date_created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No companies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(AllUserCompanies, \"iifAV2hgaEKqyEPd2xXoFJGCUhk=\", false, function () {\n  return [useNavigate];\n});\n_c = AllUserCompanies;\nexport default AllUserCompanies;\nvar _c;\n$RefreshReg$(_c, \"AllUserCompanies\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AllUserCompanies","fetchCompanies","loadCompany","storage","_s","userCompanies","setUserCompanies","loading","setLoading","error","setError","navigate","getCompanies","response","console","log","Array","isArray","err","message","handleCompanySelect","companyId","company_name","setItem","company","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","className","length","map","index","type","company_id","description","date_created","_c","$RefreshReg$"],"sources":["/Users/tony/Downloads/LinkedIn_Project/Frontend/src/Components/ChildComponents/AllUserCompanies.jsx"],"sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./childComponents.css\";\n\n// import { useSearchParams } from \"react-router-dom\";\n\nconst AllUserCompanies = ({fetchCompanies, loadCompany,storage}) => {\n    const [userCompanies, setUserCompanies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        getCompanies();\n    }, []);\n\n    const getCompanies = async () => {\n        try {\n            setLoading(true);\n            const response = await fetchCompanies();\n            console.log(response);\n            // Ensure response is an array before setting state\n            if (Array.isArray(response)) {\n                setUserCompanies(response);\n            } else {\n                setUserCompanies([]);\n                setError(\"Received invalid data format\");\n            }\n        } catch (err) {\n            setError(err.message);\n            setUserCompanies([]);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCompanySelect = async(companyId) =>{\n        const response = await loadCompany(companyId);\n        \n        if (response.company_name){\n            storage.setItem(\"companyId\",company)\n            navigate(`/signed-in/feed/user-companies/${companyId}`);\n        }\n    }\n\n    if (loading) return <div>Loading companies...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n\n\n    return (\n        <div>\n            <button onClick={(e) => navigate(\"/signed-in/feed/\") } className=\"back-button\">Back</button>\n            <h1>Companies</h1>\n            {userCompanies.length > 0 ? (\n                <ul>\n                    {userCompanies.map((company, index) => (\n                        <li key={index} className=\"list-of-user-companies\">\n                            {/* <form onSubmit={handleCompanySelect(company.company_id)}> */}\n                            <button className=\"button-for-each-user-companies\" type=\"submit\" onClick={(e) => handleCompanySelect(company.company_id)}>\n                                <h2 className=\"button-company-header-for-each-user-companies\">Company name:</h2>\n                                <h3>{company.company_name}</h3> \n                                <h2 className=\"button-company-industry-for-each-user-companies\">Description:</h2> \n                                <h3>{company.description}</h3>  \n                                <h2 className=\"button-date-company-for-each-user-companies\">Date Created:</h2>\n                                <h3>{company.date_created}</h3>\n                            </button> \n                            {/* </form> */}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No companies found</p>\n            )}\n        </div>\n    );\n};\n\nexport default AllUserCompanies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}